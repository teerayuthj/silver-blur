!function(e,t){"object"==typeof exports&&"object"==typeof module?module.exports=t():"function"==typeof define&&define.amd?define([],t):"object"==typeof exports?exports.SilverBlur=t():e.SilverBlur=t()}(this,()=>(()=>{class SilverPriceBlur{constructor(e={}){this.isInitialized=!1,this.blurCheckInterval=null,this.currentBlurState=!1,this.holidayData=null,this.config={holidayJsonUrl:e.holidayJsonUrl||"./config/holidays.json",cdnBaseUrl:e.cdnBaseUrl||null,marketOpenHour:e.marketOpenHour||5,marketOpenMinute:e.marketOpenMinute||0,weekendCloseHour:e.weekendCloseHour||4,weekendCloseMinute:e.weekendCloseMinute||0,...e},this.priceElements=["slvUsdBid","slvUsdOffer","slvKgBid","slvKgOffer","slvKgVat","slvUsdChg","slvKgChg"],this.vatLabelElements=[".sv-vat-label"],this.timerContainers=[".sv-event-timer"],console.log("Silver Blur System: Initialized")}getBangkokTime(){const e=new Date;return new Date(e.toLocaleString("en-US",{timeZone:"Asia/Bangkok"}))}async loadHolidayData(){const e=this.config.cdnBaseUrl?`${this.config.cdnBaseUrl}/config/holidays.json`:this.config.holidayJsonUrl;try{console.log(`Silver Blur: Loading holidays from ${e}`);const t=await fetch(e);if(!t.ok)throw new Error(`HTTP error! status: ${t.status}`);return this.holidayData=await t.json(),console.log("Silver Blur: Holiday data loaded successfully"),!0}catch(e){return console.warn("Silver Blur: Failed to load holiday data:",e.message),console.warn("Silver Blur: Continuing with weekend-only blur"),this.holidayData={holidays:{}},!1}}isHoliday(e=null){if(!this.holidayData||!this.holidayData.holidays)return!1;const t=e||this.getBangkokTime(),o=t.getFullYear().toString(),i=`${String(t.getMonth()+1).padStart(2,"0")}-${String(t.getDate()).padStart(2,"0")}`;return this.holidayData.holidays[o]&&this.holidayData.holidays[o][i]}getHolidayInfo(e=null){if(!this.holidayData||!this.holidayData.holidays)return null;const t=e||this.getBangkokTime(),o=t.getFullYear().toString(),i=`${String(t.getMonth()+1).padStart(2,"0")}-${String(t.getDate()).padStart(2,"0")}`;return this.holidayData.holidays[o]&&this.holidayData.holidays[o][i]?this.holidayData.holidays[o][i]:null}isWeekendClosure(){const e=this.getBangkokTime(),t=e.getDay(),o=60*e.getHours()+e.getMinutes(),i=60*this.config.weekendCloseHour+this.config.weekendCloseMinute;return 0===t||6===t&&o>=i}isMarketOpen(){const e=this.getBangkokTime(),t=e.getDay(),o=60*e.getHours()+e.getMinutes(),i=60*this.config.marketOpenHour+this.config.marketOpenMinute;if(this.isWeekendClosure()){const e=0===t?"Sunday":"Saturday",o=6===t?` (closed from ${this.config.weekendCloseHour.toString().padStart(2,"0")}:${this.config.weekendCloseMinute.toString().padStart(2,"0")})`:"";return console.log(`Silver Blur: Weekend closure - ${e}${o}, price not available`),!1}const r=this.getHolidayInfo(e);return r?(console.log(`Silver Blur: Holiday detected (${r.name}), price not available`),!1):this.isAfterHolidayBeforeOpen()?(console.log(`Silver Blur: After holiday, before market open (${this.config.marketOpenHour.toString().padStart(2,"0")}:${this.config.marketOpenMinute.toString().padStart(2,"0")}), price not available`),!1):t>=1&&t<=5&&o<i?(console.log(`Silver Blur: Before market hours (opens at ${this.config.marketOpenHour.toString().padStart(2,"0")}:${this.config.marketOpenMinute.toString().padStart(2,"0")}), price not available`),!1):(console.log(`Silver Blur: Bangkok time ${e.toLocaleTimeString("th-TH")}, Price AVAILABLE (global market hours)`),!0)}isAfterHolidayBeforeOpen(){const e=this.getBangkokTime(),t=60*e.getHours()+e.getMinutes(),o=60*this.config.marketOpenHour+this.config.marketOpenMinute,i=new Date(e);i.setDate(i.getDate()-1);return!!(this.getHolidayInfo(i)&&t<o)}applyBlur(){this.currentBlurState||(console.log("Silver Blur: Price not available - applying blur effect"),this.priceElements.forEach(e=>{const t=document.getElementById(e);t&&t.classList.add("sv-blur-price","sv-price-blurred")}),this.vatLabelElements.forEach(e=>{document.querySelectorAll(e).forEach(e=>{e.classList.add("sv-blur-price","sv-price-blurred")})}),this.timerContainers.forEach(e=>{document.querySelectorAll(e).forEach(e=>{e.classList.add("sv-blur-overlay","sv-market-closed")})}),this.currentBlurState=!0)}removeBlur(){this.currentBlurState&&(console.log("Silver Blur: Price available - removing blur effect"),this.priceElements.forEach(e=>{const t=document.getElementById(e);t&&t.classList.remove("sv-blur-price","sv-price-blurred")}),this.vatLabelElements.forEach(e=>{document.querySelectorAll(e).forEach(e=>{e.classList.remove("sv-blur-price","sv-price-blurred")})}),this.timerContainers.forEach(e=>{document.querySelectorAll(e).forEach(e=>{e.classList.remove("sv-blur-overlay","sv-market-closed")})}),this.currentBlurState=!1)}updateBlurStatus(){const e=this.isMarketOpen();e&&this.currentBlurState?this.removeBlur():e||this.currentBlurState||this.applyBlur()}async init(){this.isInitialized?console.log("Silver Blur: Already initialized"):(console.log("Silver Blur: Starting initialization..."),await this.loadHolidayData(),"loading"===document.readyState?document.addEventListener("DOMContentLoaded",()=>this.startBlurSystem()):this.startBlurSystem())}startBlurSystem(){this.updateBlurStatus(),this.blurCheckInterval=setInterval(()=>{this.updateBlurStatus()},3e4),this.isInitialized=!0,console.log("Silver Blur: System started, checking every 30 seconds")}stop(){this.blurCheckInterval&&(clearInterval(this.blurCheckInterval),this.blurCheckInterval=null),this.removeBlur(),this.isInitialized=!1,console.log("Silver Blur: System stopped")}addHoliday(e,t,o,i,r="",l="custom"){if(!this.holidayData||!this.holidayData.holidays)return console.error("Silver Blur: Holiday data not loaded"),!1;const a=e.toString(),n=`${String(t).padStart(2,"0")}-${String(o).padStart(2,"0")}`;return this.holidayData.holidays[a]||(this.holidayData.holidays[a]={}),this.holidayData.holidays[a][n]={name:i,name_en:r||i,type:l},console.log(`Silver Blur: Added holiday - ${i} (${e}-${String(t).padStart(2,"0")}-${String(o).padStart(2,"0")})`),!0}removeHoliday(e,t,o){if(!this.holidayData||!this.holidayData.holidays)return console.error("Silver Blur: Holiday data not loaded"),!1;const i=e.toString(),r=`${String(t).padStart(2,"0")}-${String(o).padStart(2,"0")}`;if(this.holidayData.holidays[i]&&this.holidayData.holidays[i][r]){const l=this.holidayData.holidays[i][r].name;return delete this.holidayData.holidays[i][r],console.log(`Silver Blur: Removed holiday - ${l} (${e}-${String(t).padStart(2,"0")}-${String(o).padStart(2,"0")})`),!0}return console.warn(`Silver Blur: Holiday not found (${e}-${String(t).padStart(2,"0")}-${String(o).padStart(2,"0")})`),!1}listHolidays(e){if(!this.holidayData||!this.holidayData.holidays)return console.error("Silver Blur: Holiday data not loaded"),[];const t=e.toString(),o=this.holidayData.holidays[t]||{};return console.log(`=== Holidays for ${e} ===`),Object.keys(o).sort().forEach(t=>{const i=o[t];console.log(`${e}-${t}: ${i.name} (${i.type})`)}),console.log("=== End List ==="),o}testTimeRange(){const e=this.getBangkokTime(),t=this.getHolidayInfo(e),o=e.getHours(),i=e.getMinutes(),r=e.getDay();console.log("=== Silver Blur Time Test ==="),console.log("Current Bangkok Time:",e.toLocaleString("th-TH",{timeZone:"Asia/Bangkok"})),console.log("Day of Week:",["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"][r]),console.log("Is Holiday:",t?`Yes - ${t.name}`:"No"),console.log("Is Weekend Closure:",this.isWeekendClosure()),console.log("Is After Holiday Before Open:",this.isAfterHolidayBeforeOpen()),console.log(`Global Market Hours: ${this.config.marketOpenHour.toString().padStart(2,"0")}:${this.config.marketOpenMinute.toString().padStart(2,"0")} - 24:00`),console.log(`Weekend Close: Saturday ${this.config.weekendCloseHour.toString().padStart(2,"0")}:${this.config.weekendCloseMinute.toString().padStart(2,"0")} - Sunday 24:00`),console.log(`Current Time: ${o.toString().padStart(2,"0")}:${i.toString().padStart(2,"0")}`),console.log("Blur Logic: Global Market Hours + Weekend Closure + Holidays"),console.log("Market Status:",this.isMarketOpen()?"OPEN":"CLOSED"),console.log("Current Blur State:",this.currentBlurState?"BLURRED":"VISIBLE"),console.log("=== End Test ===")}}return window.silverBlur=window.silverBlur||new SilverPriceBlur,window.initSilverBlurCDN=e=>(window.silverBlur=new SilverPriceBlur({cdnBaseUrl:e}),window.silverBlur.init()),document.addEventListener("DOMContentLoaded",async()=>{setTimeout(async()=>{await window.silverBlur.init()},1e3)}),window.testSilverBlur=()=>{window.silverBlur.testTimeRange()},window.addHoliday=(e,t,o,i,r="",l="custom")=>window.silverBlur.addHoliday(e,t,o,i,r,l),window.removeHoliday=(e,t,o)=>window.silverBlur.removeHoliday(e,t,o),window.listHolidays=e=>window.silverBlur.listHolidays(e),window.setMarketHours=(e,t=0)=>{window.silverBlur.config.marketOpenHour=e,window.silverBlur.config.marketOpenMinute=t,console.log(`Silver Blur: Market open hours updated to ${e.toString().padStart(2,"0")}:${t.toString().padStart(2,"0")}`),window.silverBlur.updateBlurStatus()},window.setWeekendCloseTime=(e,t=0)=>{window.silverBlur.config.weekendCloseHour=e,window.silverBlur.config.weekendCloseMinute=t,console.log(`Silver Blur: Weekend close time updated to Saturday ${e.toString().padStart(2,"0")}:${t.toString().padStart(2,"0")}`),window.silverBlur.updateBlurStatus()},{}})());
//# sourceMappingURL=silver-blur.min.js.map