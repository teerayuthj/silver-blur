!function(t,e){"object"==typeof exports&&"object"==typeof module?module.exports=e():"function"==typeof define&&define.amd?define([],e):"object"==typeof exports?exports.SilverBlur=e():t.SilverBlur=e()}(this,()=>(()=>{class SilverPriceBlur{constructor(t={}){this.isInitialized=!1,this.blurCheckInterval=null,this.currentBlurState=!1,this.holidayData=null,this.config={holidayJsonUrl:t.holidayJsonUrl||"./config/holidays.json",cdnBaseUrl:t.cdnBaseUrl||null,marketOpenHour:t.marketOpenHour||8,marketOpenMinute:t.marketOpenMinute||0,...t},this.priceElements=["slvUsdBid","slvUsdOffer","slvKgBid","slvKgOffer","slvKgVat","slvUsdChg","slvKgChg"],this.vatLabelElements=[".sv-vat-label"],this.timerContainers=[".sv-event-timer"],console.log("Silver Blur System: Initialized")}getBangkokTime(){const t=new Date;return new Date(t.toLocaleString("en-US",{timeZone:"Asia/Bangkok"}))}async loadHolidayData(){const t=this.config.cdnBaseUrl?`${this.config.cdnBaseUrl}/config/holidays.json`:this.config.holidayJsonUrl;try{console.log(`Silver Blur: Loading holidays from ${t}`);const e=await fetch(t);if(!e.ok)throw new Error(`HTTP error! status: ${e.status}`);return this.holidayData=await e.json(),console.log("Silver Blur: Holiday data loaded successfully"),!0}catch(t){return console.warn("Silver Blur: Failed to load holiday data:",t.message),console.warn("Silver Blur: Continuing with weekend-only blur"),this.holidayData={holidays:{}},!1}}isHoliday(t=null){if(!this.holidayData||!this.holidayData.holidays)return!1;const e=t||this.getBangkokTime(),i=e.getFullYear().toString(),r=`${String(e.getMonth()+1).padStart(2,"0")}-${String(e.getDate()).padStart(2,"0")}`;return this.holidayData.holidays[i]&&this.holidayData.holidays[i][r]}getHolidayInfo(t=null){if(!this.holidayData||!this.holidayData.holidays)return null;const e=t||this.getBangkokTime(),i=e.getFullYear().toString(),r=`${String(e.getMonth()+1).padStart(2,"0")}-${String(e.getDate()).padStart(2,"0")}`;return this.holidayData.holidays[i]&&this.holidayData.holidays[i][r]?this.holidayData.holidays[i][r]:null}isMarketOpen(){const t=this.getBangkokTime(),e=t.getDay(),i=t.getHours(),r=t.getMinutes();if(0===e||6===e)return console.log(`Silver Blur: Weekend detected (${0===e?"Sunday":"Saturday"}), price not available`),!1;const a=this.getHolidayInfo(t);if(a)return console.log(`Silver Blur: Holiday detected (${a.name}), price not available`),!1;return 60*i+r<60*this.config.marketOpenHour+this.config.marketOpenMinute?(console.log(`Silver Blur: Before market hours (opens at ${this.config.marketOpenHour.toString().padStart(2,"0")}:${this.config.marketOpenMinute.toString().padStart(2,"0")}), price not available`),!1):(console.log(`Silver Blur: Bangkok time ${t.toLocaleTimeString("th-TH")}, Price AVAILABLE (weekday, not holiday, after ${this.config.marketOpenHour.toString().padStart(2,"0")}:${this.config.marketOpenMinute.toString().padStart(2,"0")})`),!0)}applyBlur(){this.currentBlurState||(console.log("Silver Blur: Price not available - applying blur effect"),this.priceElements.forEach(t=>{const e=document.getElementById(t);e&&e.classList.add("sv-blur-price","sv-price-blurred")}),this.vatLabelElements.forEach(t=>{document.querySelectorAll(t).forEach(t=>{t.classList.add("sv-blur-price","sv-price-blurred")})}),this.timerContainers.forEach(t=>{document.querySelectorAll(t).forEach(t=>{t.classList.add("sv-blur-overlay","sv-market-closed")})}),this.currentBlurState=!0)}removeBlur(){this.currentBlurState&&(console.log("Silver Blur: Price available - removing blur effect"),this.priceElements.forEach(t=>{const e=document.getElementById(t);e&&e.classList.remove("sv-blur-price","sv-price-blurred")}),this.vatLabelElements.forEach(t=>{document.querySelectorAll(t).forEach(t=>{t.classList.remove("sv-blur-price","sv-price-blurred")})}),this.timerContainers.forEach(t=>{document.querySelectorAll(t).forEach(t=>{t.classList.remove("sv-blur-overlay","sv-market-closed")})}),this.currentBlurState=!1)}updateBlurStatus(){const t=this.isMarketOpen();t&&this.currentBlurState?this.removeBlur():t||this.currentBlurState||this.applyBlur()}async init(){this.isInitialized?console.log("Silver Blur: Already initialized"):(console.log("Silver Blur: Starting initialization..."),await this.loadHolidayData(),"loading"===document.readyState?document.addEventListener("DOMContentLoaded",()=>this.startBlurSystem()):this.startBlurSystem())}startBlurSystem(){this.updateBlurStatus(),this.blurCheckInterval=setInterval(()=>{this.updateBlurStatus()},3e4),this.isInitialized=!0,console.log("Silver Blur: System started, checking every 30 seconds")}stop(){this.blurCheckInterval&&(clearInterval(this.blurCheckInterval),this.blurCheckInterval=null),this.removeBlur(),this.isInitialized=!1,console.log("Silver Blur: System stopped")}addHoliday(t,e,i,r,a="",o="custom"){if(!this.holidayData||!this.holidayData.holidays)return console.error("Silver Blur: Holiday data not loaded"),!1;const l=t.toString(),n=`${String(e).padStart(2,"0")}-${String(i).padStart(2,"0")}`;return this.holidayData.holidays[l]||(this.holidayData.holidays[l]={}),this.holidayData.holidays[l][n]={name:r,name_en:a||r,type:o},console.log(`Silver Blur: Added holiday - ${r} (${t}-${String(e).padStart(2,"0")}-${String(i).padStart(2,"0")})`),!0}removeHoliday(t,e,i){if(!this.holidayData||!this.holidayData.holidays)return console.error("Silver Blur: Holiday data not loaded"),!1;const r=t.toString(),a=`${String(e).padStart(2,"0")}-${String(i).padStart(2,"0")}`;if(this.holidayData.holidays[r]&&this.holidayData.holidays[r][a]){const o=this.holidayData.holidays[r][a].name;return delete this.holidayData.holidays[r][a],console.log(`Silver Blur: Removed holiday - ${o} (${t}-${String(e).padStart(2,"0")}-${String(i).padStart(2,"0")})`),!0}return console.warn(`Silver Blur: Holiday not found (${t}-${String(e).padStart(2,"0")}-${String(i).padStart(2,"0")})`),!1}listHolidays(t){if(!this.holidayData||!this.holidayData.holidays)return console.error("Silver Blur: Holiday data not loaded"),[];const e=t.toString(),i=this.holidayData.holidays[e]||{};return console.log(`=== Holidays for ${t} ===`),Object.keys(i).sort().forEach(e=>{const r=i[e];console.log(`${t}-${e}: ${r.name} (${r.type})`)}),console.log("=== End List ==="),i}testTimeRange(){const t=this.getBangkokTime(),e=this.getHolidayInfo(t),i=t.getHours(),r=t.getMinutes();console.log("=== Silver Blur Time Test ==="),console.log("Current Bangkok Time:",t.toLocaleString("th-TH",{timeZone:"Asia/Bangkok"})),console.log("Day of Week:",["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"][t.getDay()]),console.log("Is Holiday:",e?`Yes - ${e.name}`:"No"),console.log(`Market Hours: Opens at ${this.config.marketOpenHour.toString().padStart(2,"0")}:${this.config.marketOpenMinute.toString().padStart(2,"0")}`),console.log(`Current Time: ${i.toString().padStart(2,"0")}:${r.toString().padStart(2,"0")}`),console.log("Blur Logic: Weekends + Holidays + Before Market Hours"),console.log("Market Status:",this.isMarketOpen()?"OPEN":"CLOSED"),console.log("Current Blur State:",this.currentBlurState?"BLURRED":"VISIBLE"),console.log("=== End Test ===")}}return window.silverBlur=window.silverBlur||new SilverPriceBlur,window.initSilverBlurCDN=t=>(window.silverBlur=new SilverPriceBlur({cdnBaseUrl:t}),window.silverBlur.init()),document.addEventListener("DOMContentLoaded",async()=>{setTimeout(async()=>{await window.silverBlur.init()},1e3)}),window.testSilverBlur=()=>{window.silverBlur.testTimeRange()},window.addHoliday=(t,e,i,r,a="",o="custom")=>window.silverBlur.addHoliday(t,e,i,r,a,o),window.removeHoliday=(t,e,i)=>window.silverBlur.removeHoliday(t,e,i),window.listHolidays=t=>window.silverBlur.listHolidays(t),window.setMarketHours=(t,e=0)=>{window.silverBlur.config.marketOpenHour=t,window.silverBlur.config.marketOpenMinute=e,console.log(`Silver Blur: Market hours updated to ${t.toString().padStart(2,"0")}:${e.toString().padStart(2,"0")}`),window.silverBlur.updateBlurStatus()},{}})());
//# sourceMappingURL=silver-blur.min.js.map